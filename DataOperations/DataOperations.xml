<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DataOperations</name>
    </assembly>
    <members>
        <member name="T:DataOperations.BackendOperations">
            <summary>
            All data queries are in Stored Procedures
            </summary>
        </member>
        <member name="M:DataOperations.BackendOperations.GetStoredProcedureContents(System.String)">
            <summary>
            Get stored procedure definition.
            If there are parameters they are not returned
            </summary>
            <param name="pName"></param>
        </member>
        <member name="M:DataOperations.BackendOperations.ReturnErrorInformation">
            <summary>
            Mocked up sample showing how to return error information from a failed
            operation within a stored procedure.
            </summary>
        </member>
        <member name="M:DataOperations.BackendOperations.GetAllRecordsByContactTitle(System.Int32)">
            <summary>
            This example does not return contact type (contact name) as this is
            common practice as we know the type from the ComboBox selection.
            </summary>
            <param name="contactTypeIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:DataOperations.BackendOperations.RetrieveContactTitles">
            <summary>
            Retrieve all contact titles
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataOperations.BackendOperations.AddCustomer(System.String,System.String,System.Int32)">
            <summary>
            Add a new Customer, return new primary key on success.
            </summary>
            <param name="companyName"></param>
            <param name="contactName"></param>
            <param name="contactTypeIdentifier"></param>
            <returns></returns>
        </member>
        <member name="M:DataOperations.BackendOperations.RemoveCustomer(System.Int32)">
            <summary>
            Remove customer by primary key
            </summary>
            <param name="primaryKey">Existing customer key</param>
            <returns></returns>
        </member>
        <member name="M:DataOperations.BackendOperations.UpdateCustomer(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Update record by primary key
            </summary>
            <param name="primaryKey">Existing customer key</param>
            <param name="companyName"></param>
            <param name="contactName"></param>
            <param name="contactIdentifier">Existing contact key</param>
            <returns></returns>
        </member>
        <member name="T:DataOperations.TypeClasses.StoredProcedureDetail">
            <summary>
            Container for stored procedure parameter definitions
            </summary>
        </member>
        <member name="M:DataOperations.TypeClasses.StoredProcedureDetail.ItemArray">
            <summary>
            Used to populate ListView
            </summary>
            <returns></returns>
        </member>
        <member name="T:DataOperations.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DataOperations.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DataOperations.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
